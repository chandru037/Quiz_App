const questions = [{
        question: "1. What is HTML?",
        answers: [
            "Hyper Text Markup Language",
            "Hot Mail",
            "How to Make Lasagna",
            "Hyperlink and Text Markup Language"
        ],
        correct: 0
    },
    {
        question: "2. What is CSS?",
        answers: [
            "Cascading Style Sheets",
            "Creative Style System",
            "Computer Style Sheets",
            "Common Style Syntax"
        ],
        correct: 0
    },
    {
        question: "3. The part of machine level instruction, which tells the central processor what has to be done, is",
        answers: [
            "Operation code",
            "Address",
            "Data",
            "Instruction Register"
        ],
        correct: 0
    },
    {
        question: "4. Which of the following refers to the associative memory?",
        answers: [
            "the address of the data is generated by the CPU",
            "the address of the data is supplied by the users",
            "there is no need for an address i.e. the data is used as an address",
            "the data is stored in a sequential manner"
        ],
        correct: 2
    },
    {
        question: "5. To avoid the race condition, the number of processes that may be simultaneously inside their critical section is",
        answers: [
            "8",
            "1",
            "0",
            "2"
        ],
        correct: 1
    },
    {
        question: "6. What command is used to count the total number of lines, words, and characters contained in a file?",
        answers: [
            "countw",
            "wc",
            "wcount",
            "count"
        ],
        correct: 1
    },
    {
        question: "7. What command is used to remove files?",
        answers: [
            "dm",
            "delete",
            "rm",
            "remove"
        ],
        correct: 2
    },
    {
        question: "8. What command is used with vi editor to delete a single character?",
        answers: [
            "x",
            "y",
            "z",
            "d"
        ],
        correct: 0
    },
    {
        question: "9. A report generator is used to",
        answers: [
            "print files on paper",
            "data entry",
            "update files",
            "create graphical reports"
        ],
        correct: 0
    },
    {
        question: "10. Primitive operations common to all record management systems include",
        answers: [
            "Print",
            "Sort",
            "Look-up",
            "Update"
        ],
        correct: 2
    }
];


let currentQuestionIndex = 0;
let score = 0;
let time = 60; // Time per question
let totalTime = 600; // Total time for the quiz (10 minutes)
let timer;
let totalTimer;
let attempted = 0;
let skipped = 0;
let wrong = 0;
let selectedAnswers = [];
let hasAnswered = false;
const maxSelections = 1; // Maximum number of answers allowed to be selected

const questionElement = document.getElementById('question');
const answersElement = document.getElementById('answers');
const questionTimeElement = document.getElementById('question-time');
const totalTimeElement = document.getElementById('total-time');
const nextButton = document.getElementById('next-btn');
const previousButton = document.getElementById('prev-btn');
const submitButton = document.getElementById('submit-btn');

function startQuiz() {
    showQuestion();
    timer = setInterval(countdown, 1000); // Timer for question time
    totalTimer = setInterval(totalCountdown, 1000); // Total quiz timer
}

function showQuestion() {
    resetState();
    const currentQuestion = questions[currentQuestionIndex];
    questionElement.innerText = currentQuestion.question;

    const optionLabels = ['a', 'b', 'c', 'd'];

    currentQuestion.answers.forEach((answer, index) => {
        const button = document.createElement('button');
        button.innerText = `${optionLabels[index]}. ${answer}`;
        button.classList.add('cta-button');
        button.addEventListener('click', () => selectAnswer(index, button));
        answersElement.appendChild(button);
    });

    updateNavigationButtons();
}

function resetState() {
    selectedAnswers = [];
    hasAnswered = false;
    answersElement.innerHTML = ''; // Clear previous answers
    questionTimeElement.innerText = time; // Reset question timer
    nextButton.classList.add('hide');
    previousButton.classList.add('hide');
    submitButton.classList.add('hide');
}

function selectAnswer(index, button) {
    if (selectedAnswers.includes(index)) {
        selectedAnswers = selectedAnswers.filter(i => i !== index);
        button.classList.remove('active');
    } else {
        if (selectedAnswers.length < maxSelections) {
            selectedAnswers.push(index);
            button.classList.add('active');
        }
    }
    hasAnswered = selectedAnswers.length > 0;
    if (currentQuestionIndex < questions.length - 1) {
        nextButton.classList.remove('hide');
    } else {
        submitButton.classList.remove('hide');
    }
}

function nextQuestion() {
    processAnswer();
    if (currentQuestionIndex < questions.length - 1) {
        currentQuestionIndex++;
        time = 60; // Reset question time
        showQuestion();
    } else {
        finishQuiz();
    }
}

function previousQuestion() {
    if (currentQuestionIndex > 0) {
        currentQuestionIndex--;
        time = 60; // Reset question time
        showQuestion();
    }
}

function countdown() {
    if (time > 0) {
        time--;
        questionTimeElement.innerText = time;
    } else {
        skipped++;
        nextQuestion();
    }
}

function totalCountdown() {
    if (totalTime > 0) {
        totalTime--;
        const minutes = Math.floor(totalTime / 60);
        const seconds = totalTime % 60;
        totalTimeElement.innerText = `${minutes}:${seconds < 10 ? '0' : ''}${seconds}`;
    } else {
        finishQuiz();
    }
}

function processAnswer() {
    if (!hasAnswered) {
        skipped++;
    } else {
        attempted++;
        const currentQuestion = questions[currentQuestionIndex];
        const isCorrect = selectedAnswers.includes(currentQuestion.correct);
        if (isCorrect) {
            score++;
        } else {
            wrong++;
        }
    }
}

function finishQuiz() {
    clearInterval(timer);
    clearInterval(totalTimer);
    localStorage.setItem('quizScore', score);
    localStorage.setItem('attempted', attempted);
    localStorage.setItem('skipped', skipped);
    localStorage.setItem('wrong', wrong);
    window.location.href = 'report.html';
}

function updateNavigationButtons() {
    previousButton.classList.toggle('hide', currentQuestionIndex === 0);
    nextButton.classList.toggle('hide', currentQuestionIndex === questions.length - 1);
    submitButton.classList.toggle('hide', currentQuestionIndex !== questions.length - 1);
}

nextButton.addEventListener('click', nextQuestion);
previousButton.addEventListener('click', previousQuestion);
submitButton.addEventListener('click', finishQuiz);

startQuiz();